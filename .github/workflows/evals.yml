name: RAG Evals (RAGAS CI Gate)

on:
  workflow_dispatch:

jobs:
  evals:
    runs-on: ubuntu-latest
    # Expose secret as env, then use env context in step-level conditions
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        if: env.OPENAI_API_KEY != ''
        uses: actions/checkout@v4

      - name: Set up Python
        if: env.OPENAI_API_KEY != ''
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Create .env from example
        if: env.OPENAI_API_KEY != ''
        run: |
          cp .env.example .env
          # Insert OPENAI_API_KEY from env (mapped from GitHub secret)
          sed -i 's|^OPENAI_API_KEY=.*|OPENAI_API_KEY='"${OPENAI_API_KEY}"'|' .env
          # Ensure evals target API is localhost mapping from compose
          sed -i 's|^EVAL_API_BASE_URL=.*|EVAL_API_BASE_URL=http://localhost:8000|' .env
          sed -i 's|^MAX_DOCS=.*|MAX_DOCS=12|' .env || echo "MAX_DOCS=12" >> .env
          echo "RUNNING_IN_DOCKER=1" >> .env
          sed -i 's|^RERANKER_ENABLED=.*|RERANKER_ENABLED=true|' .env

      - name: Build and start stack
        if: env.OPENAI_API_KEY != ''
        run: docker compose -f infra/docker-compose.yml up --build -d

      - name: Wait for API health
        if: env.OPENAI_API_KEY != ''
        run: |
          for i in {1..60}; do
            if curl -sSf http://localhost:8000/health >/dev/null; then
              echo "API is healthy"; exit 0
            fi
            echo "Waiting for API... ($i)"; sleep 2
          done
          echo "API did not become healthy in time"; docker logs rag_api || true; exit 1

      - name: Ingest small subset of Stripe docs
        if: env.OPENAI_API_KEY != ''
        run: docker compose -f infra/docker-compose.yml run --rm api python -m app.ingestion.ingest_stripe

      - name: Run RAGAS evals gate
        if: env.OPENAI_API_KEY != ''
        run: docker compose -f infra/docker-compose.yml run --rm api python -m app.evals.run_ragas

      - name: Teardown
        if: always()
        run: docker compose -f infra/docker-compose.yml down -v

      - name: Skip (OPENAI_API_KEY not set)
        if: env.OPENAI_API_KEY == ''
        run: echo "OPENAI_API_KEY secret not set; skipping evals workflow."
