version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: rag_db
    environment:
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_pass
      POSTGRES_DB: rag_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_db"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: rag_redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes", "--appendfsync", "everysec"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    container_name: rag_api
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    restart: unless-stopped

  ui:
    build:
      context: ..
      dockerfile: Dockerfile.ui
    container_name: rag_ui
    env_file:
      - ../.env
    environment:
      - API_BASE_URL=http://api:8000
    depends_on:
      - api
    ports:
      - "8501:8501"
    command: >
      streamlit run ui/app.py
      --server.port 8501
      --server.address 0.0.0.0
    restart: unless-stopped

volumes:
  db_data:
  redis_data:
